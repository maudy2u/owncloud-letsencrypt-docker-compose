version: '3'
# reference: https://github.com/rorydavidson/owncloud-nginx-letsencrypt-docker/blob/master/docker-compose.yml

volumes:
  mysql:
    driver: local
  backup:
    driver: local
  redis:
    driver: local

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: owncloud_nginx-proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/vhost:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
# Also see here to remove notices: https://linuxize.com/post/nginx-log-files/
# REQUIRED FOR FILES SIZE OVER 1M
## It upadtes timeouts to be 10m or 600s
## and increases file size to be 16G
# https://stackoverflow.com/questions/44741514/nginx-error-client-intended-to-send-too-large-body
# Used to change upload limit
      - ./overridden_files/owncloud.nginx.conf:/etc/nginx/nginx.conf
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"

  letsencrypt:
    image: nginxproxy/acme-companion
    container_name: owncloud_letsencrypt
    restart: always
    depends_on:
      - nginx-proxy
    environment:
      - DEFAULT_HOST=${DNS_ALIAS}
      - DEFAULT_EMAIL=${DEFAULT_EMAIL}
    volumes:
      - ./acme:/etc/acme.sh
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/vhost:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro

  owncloud:
    image: owncloud/server:${OWNCLOUD_VERSION}
    container_name: owncloud_server
    restart: always
    expose:
      - 8080
    depends_on:
      - db
      - redis
    environment:
# Used by `nginx-proxy` to automatically proxy the traffic to the `nginx` docker
      - VIRTUAL_HOST=${DNS_ALIAS}
      - VIRTUAL_PORT=8080
# Used by `letsencrypt-nginx-proxy-companion` to generate SSL certificates
      - LETSENCRYPT_HOST=${DNS_ALIAS}
      - LETSENCRYPT_EMAIL=${DEFAULT_EMAIL}
# these are the default owncloud variables
      - OWNCLOUD_DOMAIN=${OWNCLOUD_DOMAIN}
      - OWNCLOUD_DB_TYPE=mysql
      - OWNCLOUD_DB_NAME=owncloud
      - OWNCLOUD_DB_USERNAME=owncloud
      - OWNCLOUD_DB_PASSWORD=${ADMIN_PASSWORD}
      - OWNCLOUD_DB_HOST=db
      - OWNCLOUD_ADMIN_USERNAME=${ADMIN_USERNAME}
      - OWNCLOUD_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - OWNCLOUD_MYSQL_UTF8MB4=true
      - OWNCLOUD_REDIS_ENABLED=true
      - OWNCLOUD_REDIS_HOST=redis
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./data:/mnt/data
# REQUIRED FOR FILES SIZE OVER 1M
## It upadtes timeouts to be 10m or 600s
      - ./overridden_files/owncloud.apache.php.ini:/etc/php/7.4/apache2/php.ini

# OLD DB
  db:
    image: webhippie/mariadb:latest
    container_name: owncloud_db
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=owncloud
      - MARIADB_USERNAME=owncloud
      - MARIADB_PASSWORD=${ADMIN_PASSWORD}
      - MARIADB_DATABASE=owncloud
      - MARIADB_MAX_ALLOWED_PACKET=128M
      - MARIADB_INNODB_LOG_FILE_SIZE=64M
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - mysql:/var/lib/mysql
      - backup:/var/lib/backup

# NEW REDIS - which seems to work
  redis:
    image: redis:6
    container_name: owncloud_redis
    restart: always
    command: ["--databases", "1"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis:/data
# NEED TO ADD TO THE owncloud config.php, to use this for file locking
